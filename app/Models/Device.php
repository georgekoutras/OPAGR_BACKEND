<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;

class Device extends Model
{
    use HasFactory, SoftDeletes;

    protected $guarded = ['id'];

    protected $casts = [
        'created_at' => 'datetime:d/m/Y H:i:s',
        'updated_at' => 'datetime:d/m/Y H:i:s',
    ];

    /* --------------------------------------------------------------------------------- */

    // Event Handler
    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::deleting(function ($device) {
            // delete history data
            History::where('device_id', $device->id)->delete();
            // delete debugging data
            Debugging::where('device_id', $device->id)->delete();
            //delete relationship with cultivations
            $device->cultivations()->detach();
        });
    }

    /* --------------------------------------------------------------------------------- */

    public function cultivations()
    {
        return $this->belongsToMany(Cultivation::class, 'cultivation_devices', 'device_id', 'cultivation_id');
    }

    public function debug()
    {
        return $this->hasMany(Debugging::class);
    }

    // Relationship which describes the location of a device in a cultivation
    public function locatedIn()
    {
        return $this->belongsTo(Cultivation::class, 'cultivation_id', 'id');
    }

    public function history()
    {
        return $this->hasMany(History::class);
    }

    /* --------------------------------------------------------------------------------- */

    public static function buildInitialResponse()
    {
        $response = array();
        for ($i = 0; $i < 50; $i++) $response[$i] = '00';
        return $response;
    }
}
